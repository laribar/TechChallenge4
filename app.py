# Este √© o app Streamlit que ir√° carregar o modelo salvo, coletar os dados do usu√°rio,
# aplicar as mesmas transforma√ß√µes do pipeline (normaliza√ß√£o e codifica√ß√£o)
# e retornar a predi√ß√£o do n√≠vel de obesidade com uma interface simples e intuitiva.

import streamlit as st
import pandas as pd
import joblib
import numpy as np

# Carregar modelo, scaler e label encoder
modelo = joblib.load("modelo_obesidade.pkl")
scaler = joblib.load("scaler.pkl")
label_encoder = joblib.load("label_encoder.pkl")

st.title("üîç Preditor de Obesidade")
st.write("Preencha os dados abaixo para prever o n√≠vel de obesidade:")

# Inputs do usu√°rio
genero = st.selectbox("G√™nero", ["Feminino", "Masculino"])
idade = st.slider("Idade", 10, 100, 25)
altura = st.slider("Altura (em metros)", 1.0, 2.5, 1.70)
peso = st.slider("Peso (em kg)", 30.0, 200.0, 70.0)
historico_familiar = st.selectbox("Algum familiar sofre ou sofreu com sobrepeso?", ["Sim", "N√£o"])
alimentos_caloricos = st.selectbox("Voc√™ consome alimentos muito cal√≥ricos com frequ√™ncia?", ["Sim", "N√£o"])
vegetais = st.slider("Voc√™ costuma comer vegetais nas refei√ß√µes? (0 = nunca, 3 = sempre)", 0.0, 3.0, 2.0)
refeicoes_dia = st.slider("Quantas refei√ß√µes principais voc√™ faz por dia?", 1.0, 5.0, 3.0)
lanches = st.selectbox("Voc√™ costuma comer entre as refei√ß√µes?", ["N√£o", "√Äs vezes", "Frequentemente", "Sempre"])
fuma = st.selectbox("Voc√™ fuma?", ["Sim", "N√£o"])
agua = st.slider("Quantos litros de √°gua voc√™ bebe por dia?", 0.0, 3.0, 2.0)
controla_calorias = st.selectbox("Voc√™ controla a quantidade de calorias que consome?", ["Sim", "N√£o"])
atividade_fisica = st.slider("Quantas horas de atividade f√≠sica voc√™ pratica por semana?", 0.0, 5.0, 1.0)
tempo_tela = st.slider("Tempo de uso de dispositivos tecnol√≥gicos por dia (em horas)", 0.0, 5.0, 2.0)
alcool = st.selectbox("Com que frequ√™ncia voc√™ consome bebida alco√≥lica?", ["N√£o", "√Äs vezes", "Frequentemente", "Sempre"])
transporte = st.selectbox("Qual meio de transporte voc√™ mais utiliza?", 
                          ["Transporte p√∫blico", "A p√©", "Carro", "Moto", "Bicicleta"])

# Convers√£o para os valores esperados pelo modelo
input_data = pd.DataFrame({
    "Age": [idade],
    "Height": [altura],
    "Weight": [peso],
    "FCVC": [vegetais],
    "NCP": [refeicoes_dia],
    "CH2O": [agua],
    "FAF": [atividade_fisica],
    "TUE": [tempo_tela],
    "Gender_Female": [1 if genero == "Feminino" else 0],
    "Gender_Male": [1 if genero == "Masculino" else 0],
    "family_history_yes": [1 if historico_familiar == "Sim" else 0],
    "family_history_no": [1 if historico_familiar == "N√£o" else 0],
    "FAVC_yes": [1 if alimentos_caloricos == "Sim" else 0],
    "FAVC_no": [1 if alimentos_caloricos == "N√£o" else 0],
    "CAEC_no": [1 if lanches == "N√£o" else 0],
    "CAEC_Sometimes": [1 if lanches == "√Äs vezes" else 0],
    "CAEC_Frequently": [1 if lanches == "Frequentemente" else 0],
    "CAEC_Always": [1 if lanches == "Sempre" else 0],
    "SMOKE_yes": [1 if fuma == "Sim" else 0],
    "SMOKE_no": [1 if fuma == "N√£o" else 0],
    "SCC_yes": [1 if controla_calorias == "Sim" else 0],
    "SCC_no": [1 if controla_calorias == "N√£o" else 0],
    "CALC_no": [1 if alcool == "N√£o" else 0],
    "CALC_Sometimes": [1 if alcool == "√Äs vezes" else 0],
    "CALC_Frequently": [1 if alcool == "Frequentemente" else 0],
    "CALC_Always": [1 if alcool == "Sempre" else 0],
    "MTRANS_Public_Transportation": [1 if transporte == "Transporte p√∫blico" else 0],
    "MTRANS_Walking": [1 if transporte == "A p√©" else 0],
    "MTRANS_Automobile": [1 if transporte == "Carro" else 0],
    "MTRANS_Motorbike": [1 if transporte == "Moto" else 0],
    "MTRANS_Bike": [1 if transporte == "Bicicleta" else 0]
})

# Normalizar os dados
input_scaled = scaler.transform(input_data)

# Fazer a predi√ß√£o
if st.button("Prever"):
    predicao = modelo.predict(input_scaled)
    resultado = label_encoder.inverse_transform(predicao)[0]
    st.success(f"üîé Resultado previsto: **{resultado.replace('_', ' ')}**")
